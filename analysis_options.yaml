analyzer:
  plugins:
    - custom_lint

  exclude:
    - lib/**.g.dart
    - "**/*.freezed.dart"
    - "**/*.config.dart"
    - "**/*.mocks.dart"
    - lib/core/translations/app_localizations_vi.dart
    - lib/core/translations/app_localizations_en.dart
    - lib/core/translations/app_localizations_zh.dart
    - lib/core/translations/app_localizations.dart
    #- test/**
    - pubspec.yaml
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    always_declare_return_types: error
    annotate_overrides: error
    avoid_null_checks_in_equality_operators: error
    prefer_collection_literals: info
    prefer_conditional_assignment: info
    prefer_final_fields: info
    prefer_for_elements_to_map_fromIterable: info
    prefer_generic_function_type_aliases: info
    prefer_if_null_operators: warning
    prefer_spread_collections: info
    use_function_type_syntax_for_parameters: error
    avoid_empty_else: warning
    avoid_init_to_null: info
    avoid_relative_lib_imports: warning
    avoid_return_types_on_setters: warning
    avoid_shadowing_type_parameters: warning
    avoid_types_as_parameter_names: warning
    curly_braces_in_flow_control_structures: warning
    empty_catches: warning
    empty_constructor_bodies: warning
    library_names: warning
    library_prefixes: warning
    no_duplicate_case_values: error
    null_closures: warning
    prefer_contains: info
    prefer_is_empty: warning
    prefer_is_not_empty: warning
    prefer_iterable_whereType: warning
    recursive_getters: error
    slash_for_doc_comments: info
    type_init_formals: warning
    unawaited_futures: info
    unnecessary_const: info
    unnecessary_new: error
    unnecessary_null_in_if_null_operators: warning
    unrelated_type_equality_checks: error
    use_rethrow_when_possible: warning
    valid_regexps: error
    control_flow_in_finally: warning
    empty_statements: info
    prefer_final_locals: info
    throw_in_finally: info
    await_only_futures: warning
    cancel_subscriptions: warning
    close_sinks: warning
    hash_and_equals: warning
    implementation_imports: warning
    package_names: warning
    package_prefixed_library_names: info
    test_types_in_equals: warning
    unnecessary_getters_setters: warning
    void_checks: error
    type_annotate_public_apis: error
    avoid_slow_async_io: warning
    collection_methods_unrelated_type: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: warning
    no_adjacent_strings_in_list: error
    directives_ordering: info
    only_throw_errors: warning
    prefer_asserts_in_initializer_lists: warning
    prefer_const_constructors: info
    prefer_const_constructors_in_immutables: info
    must_be_immutable: ignore
    prefer_typing_uninitialized_variables: warning
    unnecessary_null_aware_assignments: warning
    unnecessary_overrides: warning
    use_string_buffers: info
    use_full_hex_values_for_flutter_colors: info
    prefer_inlined_adds: warning
    unnecessary_parenthesis: info
    prefer_const_declarations: warning
    prefer_null_aware_operators: warning
    avoid_catching_errors: warning
    avoid_double_and_int_checks: info
    avoid_implementing_value_types: warning
    avoid_js_rounded_ints: info
    avoid_returning_null_for_future: info
    avoid_returning_null_for_void: error
    avoid_returning_this: info
    avoid_single_cascade_in_expression_statements: warning
    avoid_unused_constructor_parameters: warning
    avoid_void_async: info
    join_return_with_assignment: info
    parameter_assignments: info
    prefer_final_in_for_each: info
    prefer_initializing_formals: info
    provide_deprecation_message: warning
    sort_pub_dependencies: info
    sort_unnamed_constructors_first: info
    unnecessary_await_in_return: warning
    unsafe_html: info
    file_names: info
    cast_nullable_to_non_nullable: warning
    exhaustive_cases: warning
    tighten_type_of_initializing_formals: warning
    avoid_dynamic_calls: warning
    avoid_type_to_string: warning
    avoid_web_libraries_in_flutter: warning
    no_logic_in_create_state: warning
    overridden_fields: warning
    prefer_asserts_with_message: info
    prefer_mixin: warning
    prefer_null_aware_method_calls: warning
    sized_box_for_whitespace: warning
    unnecessary_nullable_for_final_variable_declarations: warning
    unnecessary_statements: warning
    use_build_context_synchronously: warning
    use_is_even_rather_than_modulo: warning
    comment_references: warning
    noop_primitive_operations: warning
    avoid_final_parameters: info
    leading_newlines_in_multiline_strings: info
    avoid_print: info
    avoid_renaming_method_parameters: warning
    avoid_setters_without_getters: info
    avoid_unnecessary_containers: info
    constant_identifier_names: info
    deprecated_consistency: info
    unnecessary_brace_in_string_interps: info
    non_constant_identifier_names: info
    prefer_const_literals_to_create_immutables: info
    prefer_interpolation_to_compose_strings: info
    prefer_is_not_operator: info
    unnecessary_raw_strings: info
    unnecessary_string_escapes: info
    unnecessary_string_interpolations: info
    use_named_constants: info
    require_trailing_commas: info
    # flutter_style_todos: ignore
    avoid_returning_null: info
    camel_case_extensions: info
    omit_local_variable_types: info
    prefer_single_quotes: info
    unnecessary_this: info
    sort_child_properties_last: info
    always_use_package_imports: false
    # needed for freezed
    invalid_annotation_target: ignore
    must_call_super: error
    # prefer_const_declarations: warning
    # prefer_const_constructors: warning
    # missing_return: warning
    invalid_assignment: warning
    argument_type_not_assignable: error
    return_of_invalid_type: warning
    non_bool_condition: error
    # avoid_dynamic_calls: warning
    # lines_longer_than_80_chars: warning
    # no_leading_underscores_for_local_identifiers : warning
    # omit_local_variable_types : warning
    # prefer_foreach: warning
    # prefer_single_quotes: warning
    # sized_box_shrink_expand: warning
    # sort_constructors_first: warning
    # unawaited_futures: warning
    # unnecessary_lambdas: warning
    # unnecessary_late: warning
linter:
  rules:
    - always_declare_return_types # error. No comment
    - annotate_overrides # error. No comment
    - avoid_null_checks_in_equality_operators # error
    - prefer_collection_literals # info. No comment.
    - prefer_conditional_assignment # info. No comment.
    - prefer_final_fields # info. No comment.
    - prefer_for_elements_to_map_fromIterable # info. No comment.
    - prefer_generic_function_type_aliases # info. No comment.
    - prefer_if_null_operators # warning. No comment.
    - prefer_spread_collections # info. No comment.
    - use_function_type_syntax_for_parameters # error. No comment.
    - avoid_empty_else # warning. No comment.
    - avoid_init_to_null # info. No comment.
    - avoid_relative_lib_imports # warning. No comment.
    - avoid_return_types_on_setters # warning. No comment.
    - avoid_shadowing_type_parameters # warning. No comment.
    - avoid_types_as_parameter_names # warning. No comment.
    - curly_braces_in_flow_control_structures # warning. No comment.
    - empty_catches # warning. No comment.
    - empty_constructor_bodies # warning. No comment.
    - library_names # warning. No comment.
    - library_prefixes # warning. No comment.
    - no_duplicate_case_values # error. No comment.
    - null_closures # warning. No comment.
    - prefer_contains # info. No comment.
    - prefer_is_empty # warning. No comment.
    - prefer_is_not_empty # warning. No comment.
    - prefer_iterable_whereType # warning. No comment.
    - recursive_getters # error. No comment.
    - slash_for_doc_comments # info. No comment.
    - type_init_formals # warning. No comment.
    - unawaited_futures # info. No comment.
    - unnecessary_const # info. No comment.
    - unnecessary_new # error. No comment.
    - unnecessary_null_in_if_null_operators # warning. No comment.
    - unrelated_type_equality_checks # error. No comment.
    - use_rethrow_when_possible # warning. No comment.
    - valid_regexps # error. No comment.
    - control_flow_in_finally # warning. No comment.
    - empty_statements # info. No comment.
    - prefer_final_locals # info. No comment.
    - throw_in_finally # info. No comment.
    - await_only_futures # warning. No comment.
    - cancel_subscriptions # warning. No comment.
    - close_sinks # warning. No comment.
    - hash_and_equals # warning. No comment.
    - implementation_imports # warning. No comment.
    - package_names # warning. No comment.
    - package_prefixed_library_names # info. No comment.
    - test_types_in_equals # warning. No comment.
    - unnecessary_getters_setters # warning. No comment.
    - void_checks # error. No comment.
    - type_annotate_public_apis # error. No comment.
    - avoid_slow_async_io # warning. No comment.
    - collection_methods_unrelated_type # error. No comment.
    - literal_only_boolean_expressions # warning. No comment.
    - no_adjacent_strings_in_list # error. No comment.
    - directives_ordering # info. No comment.
    - only_throw_errors # warning. No comment.
    - prefer_asserts_in_initializer_lists # warning. No comment.
    - prefer_const_constructors # info. No comment.
    - prefer_const_constructors_in_immutables # info. No comment.
    - prefer_typing_uninitialized_variables # warning. No comment.
    - unnecessary_null_aware_assignments # warning. No comment.
    - unnecessary_overrides # warning. No comment.
    - use_string_buffers # info. No comment.
    - use_full_hex_values_for_flutter_colors # info. No comment.
    - prefer_inlined_adds # warning. No comment.
    - unnecessary_parenthesis # info. No comment.
    - prefer_const_declarations # warning. No comment.
    - prefer_null_aware_operators # warning. No comment.
    - avoid_catching_errors # warning. No comment.
    - avoid_double_and_int_checks # info. No comment.
    - avoid_implementing_value_types # warning. No comment.
    - avoid_js_rounded_ints # info. No comment.
    - avoid_returning_null_for_void # error. No comment.
    - avoid_returning_this # info. No comment.
    - avoid_single_cascade_in_expression_statements # warning. No comment.
    - avoid_unused_constructor_parameters # warning. No comment.
    - avoid_void_async # info. No comment.
    - join_return_with_assignment # info. No comment.
    - parameter_assignments # info. No comment.
    - prefer_final_in_for_each # info. No comment.
    - prefer_initializing_formals # info. No comment.
    - provide_deprecation_message # warning. No comment.
    - sort_pub_dependencies # info. No comment.
    - sort_unnamed_constructors_first # info. No comment.
    - unnecessary_await_in_return # warning. No comment.
    # - unsafe_html # info. No comment.
    - file_names # info. No comment.
    - cast_nullable_to_non_nullable # warning. No comment.
    - exhaustive_cases # warning. No comment.
    - tighten_type_of_initializing_formals # warning. No comment.
    - avoid_dynamic_calls # warning. No comment.
    - avoid_type_to_string # warning. No comment.
    - avoid_web_libraries_in_flutter # warning. No comment.
    - no_logic_in_create_state # warning. No comment.
    - overridden_fields # warning. No comment.
    - prefer_asserts_with_message # info. No comment.
    - prefer_mixin # warning. No comment.
    - prefer_null_aware_method_calls # warning. No comment.
    - sized_box_for_whitespace # warning. No comment.
    - unnecessary_nullable_for_final_variable_declarations # warning. No comment.
    - unnecessary_statements # warning. No comment.
    - use_build_context_synchronously # warning. No comment.
    - use_is_even_rather_than_modulo # warning. No comment.
    - comment_references # warning. No comment.
    - noop_primitive_operations # warning. No comment.
    - avoid_final_parameters # info. handled anyway
    - leading_newlines_in_multiline_strings # info. Too pedantic.
    - avoid_print # info. Too pedantic.
    - avoid_renaming_method_parameters # warning. Too pedantic.
    - avoid_setters_without_getters # info. Too pedantic.
    # - avoid_types_on_closure_parameters # info. Too pedantic.
    - avoid_unnecessary_containers # info. Disabled because this rule decreases productivity by disturbing flow.
    # - cascade_invocations # info. Too pedantic.
    - constant_identifier_names # info. Too pedantic.
    - deprecated_consistency # info. Too pedantic.
    - unnecessary_brace_in_string_interps # info. Too pedantic.
    - non_constant_identifier_names # info. Too pedantic.
    - prefer_const_literals_to_create_immutables # info. Too pedantic.
    - prefer_interpolation_to_compose_strings # info. Too pedantic.
    - prefer_is_not_operator # info. Too pedantic.
    #- sort_constructors_first # info. Too pedantic.
    - unnecessary_raw_strings # info. Too pedantic.
    - unnecessary_string_escapes # info. Too pedantic.
    - unnecessary_string_interpolations # info. Too pedantic.
    - use_named_constants # :info. good stuff
    - require_trailing_commas # info. Too pedantic.
    - camel_case_extensions # info. Disabled because an underscore is useful to represent domain separation in generated code.
    - omit_local_variable_types # info. pedantic.
    - prefer_single_quotes # info. Too pedantic.
    - unnecessary_this # info. Too many false positives.
    - sort_child_properties_last # info. Too pedantic.
    # - always_use_package_imports # info. Prefer relative imports
    - avoid_multiple_declarations_per_line # Has false positives.
    - avoid_positional_boolean_parameters # Too pedantic.
    - no_runtimeType_toString # Too pedantic.
    # - library_private_types_in_public_api: info # Not for flutter application packages
    # - prefer_expression_function_bodies # Build methods/builder closures look awful.
    # - avoid_redundant_argument_values # info. Too pedantic.
    # - prefer_relative_imprts # not needed
    # - avoid_catches_without_on_clauses # Not needed. No comment.
    # - prefer_final_parameters # this sucks
    # - avoid_private_typedef_functions # Too pedantic.
    # - prefer_foreach # Disabled because this rule decreases productivity by disturbing flow.
    # - always_require_non_null_named_parameters # Obsolete because of NNBD.
    # - prefer_void_to_null # Obsolete because of NNBD.
    # - prefer_adjacent_string_concatenation # No comment.
    # - always_put_control_body_on_new_line # Too pedantic.
    # - always_specify_types # Too pedantic.
    # - avoid_as # Too pedantic.
    # - prefer_bool_in_asserts # No comment.
    # - use_to_and_as_if_applicable # Too pedantic.
    # - prefer_function_declarations_over_variables # With variables, the return type can be omitted safely which is useful in FP-style code.
    # - avoid_annotating_with_dynamic # It is better to always be explicit about dynamic.
    # - avoid_bool_literals_in_conditional_expressions # bool literals in conditional expressions make it easier to reason about them. X ? Y : Z is easier for humans than e.g. X || Z
    # - avoid_classes_with_only_static_members # Classes with static members don't pollute the global namespace.
    # - avoid_escaping_inner_quotes # Too pedantic.
    # - avoid_function_literals_in_foreach_calls # Great lint, but if you worry about the memory overhead of closures you should probably switch to Rust.
    # - avoid_equals_and_hash_code_on_mutable_classes # @immutable needs a dependency on meta.
    # - camel_case_types # Underscores can be useful in generated code.
    # - diagnostic_describe_all_properties # Too pedantic.
    # - do_not_use_environment # Too pedantic.
    # - missing_whitespace_between_adjacent_strings # Too pedantic.
    # - one_member_abstracts # Too pedantic.
    # - prefer_constructors_over_static_methods # Too pedantic.
    # - prefer_double_quotes # Too pedantic.
    # - prefer_int_literals # Too pedantic.
    # - public_member_api_docs # Too pedantic.
    # - super_goes_last # Deprecated
    # - unnecessary_final # final tells the reader 'This variable won't be mutated.'
    # - unnecessary_lambdas # In rare cases it is possible for this to introduce bugs.
    # - unnecessary_null_checks # Too pedantic.
    # - use_if_null_to_convert_nulls_to_bools # Too pedantic.
    # - use_key_in_widget_constructors # Too pedantic.
    # - use_late_for_private_fields_and_variables # Too pedantic.
    # - use_raw_strings # Too pedantic.
    # - use_setters_to_change_properties # Too pedantic.
    # - null_check_on_nullable_type_parameter # Too many false positives.
    # - avoid_field_initializers_in_const_classes # Too pedantic.
    # - package_api_docs # Not needed. No comment.

# linter:
#   rules:
#     lines_longer_than_80_chars : true
#     no_leading_underscores_for_local_identifiers : true
#     omit_local_variable_types : true
#     prefer_if_elements_to_conditional_expressions: false
#     prefer_foreach: true
#     prefer_single_quotes: true
#     sized_box_shrink_expand: true
#     sort_constructors_first: true
#     unawaited_futures: true
#     unnecessary_lambdas: true
#     unnecessary_late: true
#     argument_type_not_assignable: false
#     invalid_assignment: false
